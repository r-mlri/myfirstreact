{"version":3,"sources":["pekodead.png","sitecomp/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Button","addCount","setState","count","state","subCount","resetCount","className","onClick","this","React","Component","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAAe,G,MAAA,IAA0B,sC,2CC2C1BA,E,kDAxCX,aAAc,IAAD,8BACT,gBAKJC,SAAU,WACN,EAAKC,SACD,CACIC,MAAQ,EAAKC,MAAMD,MAAM,KATxB,EAcbE,SAAU,WACN,EAAKH,SACG,CACIC,MAAQ,EAAKC,MAAMD,MAAM,KAjB5B,EAoBbG,WAAa,WACT,EAAKJ,SAAS,CACVC,MAAO,KApBX,EAAKC,MAAQ,CACTD,MAAQ,GAHH,E,0CAyBf,WACE,OAEF,gCACC,wBAAQI,UAAU,MAAMC,QAASC,KAAKR,SAAtC,gCACA,uBACA,wBAAQM,UAAU,MAAMC,QAASC,KAAKJ,SAAtC,gCACA,uBACA,wBAAQE,UAAU,QAAQC,QAASC,KAAKH,WAAxC,2BACA,iDAAoBG,KAAKL,MAAMD,gB,GAnCbO,IAAMC,WCyBZC,MAtBf,WACE,OACE,qBAAKL,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKM,IAAKC,EAAMP,UAAU,WAAWQ,IAAI,SACjC,cAAC,EAAD,IACR,gIAGA,mBACER,UAAU,WACVS,KAAK,8CACLC,OAAO,SACPC,IAAI,sBAJN,2HCFOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.795123b4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pekodead.c7bab96b.png\";","import React from \"react\";\n\nclass Button extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            count : 0\n        }\n    }\n    addCount =()=>{\n        this.setState(\n            {\n                count : this.state.count+1\n            }\n        )\n        \n    }\n    subCount =()=>{\n        this.setState(\n                {\n                    count : this.state.count-1\n                })\n    }\n    resetCount = ()=>{\n        this.setState({\n            count: 0\n        })\n    }\n  render() {\n    return (\n\n  <div>\n   <button className='inc' onClick={this.addCount}>^-Increase Count-^</button>\n   <br/>\n   <button className='dec' onClick={this.subCount}>v-Decrease Count-v</button>\n   <br/>\n   <button className='reset' onClick={this.resetCount}>Reset Counter</button>\n   <h1>Current Count: {this.state.count}</h1>\n  </div>\n    );\n  }\n}\n\nexport default Button","import logo from './pekodead.png';\nimport './App.css';\nimport Button from './sitecomp/Button';\n//import Employee from './sitecomp/Employee';\n\nfunction App(){\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <Button/>\n        <p>\n          Hey you, you're finally awake, you tried to cross the border but ultimately failed didn't you?.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          CLICK THIS LINK TO FIND OUT HOW NINE OUT OF TEN EXPERTS HATE THIS MAN WITH HIS ONE SIMPLE TRICK IN LIFE\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}